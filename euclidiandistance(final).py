# -*- coding: utf-8 -*-
"""EuclidianDistance(FINAL).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bsALPi7J7RBgn_Uh-MlWy6w6kRWEcIuB
"""

!unzip /content/coil-20-proc.zip

# Commented out IPython magic to ensure Python compatibility.
import cv2
import os
import random
import matplotlib.pylab as plt
from glob import glob
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
# %matplotlib inline

pwd

# ../input/
PATH = os.path.abspath(os.path.join('..', 'content'))

# ../input/sample/images/
SOURCE_IMAGES = os.path.join(PATH, "coil-20-proc")

# ../input/sample/images/*.png
images = glob(os.path.join(SOURCE_IMAGES, "*.png"))

images[0:5]



r = random.sample(images, 3)
r

# Matplotlib black magic
plt.figure(figsize=(16,16))
plt.subplot(131)
plt.imshow(cv2.imread(r[0]))

plt.subplot(132)
plt.imshow(cv2.imread(r[1]))

plt.subplot(133)
plt.imshow(cv2.imread(r[2]));

def proc_images():
   

    x = [] # images as arrays
    
    WIDTH = 36
    HEIGHT = 36

    for img in images:
        base = os.path.basename(img)
        

        # Read and resize image
        full_size_image = cv2.imread(img)
        x.append(cv2.resize(full_size_image, (WIDTH,HEIGHT), interpolation=cv2.INTER_LINEAR))

        

    return x

x = proc_images()

# Set it up as a dataframe if you like
df = pd.DataFrame()
df["images"]=x

print(len(df), df.images[0].shape)

np.savez("image", x)



# Load npz file containing image arrays
x_npz = np.load("/content/image.npz")
x = x_npz['arr_0']

# First split the data in two sets, 80% for training, 20% for Val/Test)
X_train, X_valtest = train_test_split(x, test_size=0.2, random_state=1)



print(np.array(X_train).shape)

print(np.array(X_valtest).shape)

288/(1152+288)



#Get Euclidean Distances between images
l2distance = [np.sqrt(np.sum(np.square(np.subtract(test, train)))) for train in X_train for test in X_valtest]

#Euclidian Distance 
print(l2distance[0:5])

#Euclidian Distance Of First Test Image with all Train Images
print(l2distance [0:1151])

#Number of Euclidian Distance between Train and Test Images
len(l2distance)

#Minimum euclidian Distance of First test Image to the list of train images
min(l2distance [0:1151])

#The Position of minimum euclidian distance of first test image to the least of train images
l2distance.index(426.077457746828)

df= pd.DataFrame({"distance":l2distance})

#Exporting all euclidian distance in csv 
df.to_csv('distance.csv',index = False)

